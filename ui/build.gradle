buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:2.2.3"
    }
}

apply plugin: 'base'
apply plugin: 'com.github.node-gradle.node' // gradle-node-plugin

node {
    download = true
}

task installExpress(type: NpmTask) {
    // install the express package only
    args = ['install']
}

task bundle(type: YarnTask) {
    inputs.files(fileTree('node_modules'))
    inputs.files(fileTree('src'))
    inputs.files(fileTree('public'))
    inputs.file('package.json')
    inputs.file('package-lock.json')

    outputs.dir('build')

    dependsOn installExpress
    args = ['run', 'build']
}

// pack output of the build into JAR file
task packageNpmApp(type: Zip) {
    dependsOn npm_run_build
    baseName 'ui'
    extension 'jar'
    destinationDir file("${projectDir}/build_packageNpmApp")
    from('build') {
        // optional path under which output will be visible in Java classpath, e.g. static resources path
        into 'static'
    }
}

// declare a dedicated scope for publishing the packaged JAR
configurations {
    npmResources
}

configurations.default.extendsFrom(configurations.npmResources)

// expose the artifact created by the packaging task
artifacts {
    npmResources(packageNpmApp.archivePath) {
        builtBy packageNpmApp
        type 'jar'
    }
}

assemble.dependsOn packageNpmApp


clean {
    delete packageNpmApp.archivePath
}